# Copyright (c) WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# WSO2 Inc. licenses this file to you under the Apache License,
# Version 2.0 (the License); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# AS IS BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: apis.wso2.com
spec:
  additionalPrinterColumns:
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: wso2.com
  names:
    kind: API
    listKind: APIList
    plural: apis
    singular: api
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: API is the Schema for the apis API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: APISpec defines the desired state of API
          properties:
            apiEndPoint:
              type: string
            certsValues:
              description: Config map name of the certs values of the API project
                Default value "<empty>".
              type: string
            environmentVariables:
              description: Environment variables to be added to the API deployment.
                Default value "<empty>".
              items:
                type: string
              type: array
            image:
              description: Docker image of the API to be deployed. If specified, ignores
                the values of `UpdateTimeStamp`, `Override`. Uses the given image
                for the deployment. Default value "<empty>".
              type: string
            ingressHostname:
              description: Ingress Hostname that the API is being exposed. Default
                value "<empty>".
              type: string
            mode:
              description: Mode of the API. The mode from the swagger definition will
                be overridden by this value. Supports "privateJet", "sidecar", "<empty>".
                Default value "<empty>".
              type: string
            override:
              description: Override the exiting API docker image. Default value "false".
              type: boolean
            paramsValues:
              description: Config map name of the param values of the API project
                Default value "<empty>".
              type: string
            replicas:
              description: Replica count of the API. Default value "<empty>".
              type: integer
            swaggerConfigMapName:
              description: Config map name of which the project zip or swagger file
                is included
              type: string
            updateTimeStamp:
              description: Update API definition creating a new docker image. Make
                a rolling update to the existing API. with prefixing the timestamp
                value. Default value "<empty>".
              type: string
            version:
              description: Version of the API. The version from the swagger definition
                will be overridden by this value. Default value "<empty>".
              type: string
          required:
          - swaggerConfigMapName
          type: object
      type: object
  version: v1alpha2
  versions:
  - name: v1alpha2
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: integrations.wso2.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.readiness
    name: Status
    type: string
  - JSONPath: .status.serviceName
    name: Service-Name
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: wso2.com
  names:
    kind: Integration
    listKind: IntegrationList
    plural: integrations
    singular: integration
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Integration is the Schema for the integrations API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: IntegrationSpec defines the desired state of Integration
          properties:
            autoScale:
              description: Auto scale spec
              properties:
                enabled:
                  description: Defines if auto scaling needs to be enabled Default
                    value "<empty>".
                  type: string
                maxReplicas:
                  description: Defines maximum number of replicas of the Integration
                    deployment Default value "<empty>".
                  format: int32
                  type: integer
              type: object
            deploySpec:
              description: Specification related to deployment
              properties:
                cpuLimit:
                  description: CPU limit of containers in the pod Default value "<empty>".
                  type: string
                livenessProbe:
                  description: LivenessProbe for containers in the pod Default value
                    "<empty>".
                  properties:
                    exec:
                      description: One and only one of the following should be specified.
                        Exec specifies the action to take.
                      properties:
                        command:
                          description: Command is the command line to execute inside
                            the container, the working directory for the command  is
                            root ('/') in the container's filesystem. The command
                            is simply exec'd, it is not run inside a shell, so traditional
                            shell instructions ('|', etc) won't work. To use a shell,
                            you need to explicitly call out to that shell. Exit status
                            of 0 is treated as live/healthy and non-zero is unhealthy.
                          items:
                            type: string
                          type: array
                      type: object
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be
                        considered failed after having succeeded. Defaults to 3. Minimum
                        value is 1.
                      format: int32
                      type: integer
                    httpGet:
                      description: HTTPGet specifies the http request to perform.
                      properties:
                        host:
                          description: Host name to connect to, defaults to the pod
                            IP. You probably want to set "Host" in httpHeaders instead.
                          type: string
                        httpHeaders:
                          description: Custom headers to set in the request. HTTP
                            allows repeated headers.
                          items:
                            description: HTTPHeader describes a custom header to be
                              used in HTTP probes
                            properties:
                              name:
                                description: The header field name
                                type: string
                              value:
                                description: The header field value
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        path:
                          description: Path to access on the HTTP server.
                          type: string
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Name or number of the port to access on the
                            container. Number must be in the range 1 to 65535. Name
                            must be an IANA_SVC_NAME.
                          x-kubernetes-int-or-string: true
                        scheme:
                          description: Scheme to use for connecting to the host. Defaults
                            to HTTP.
                          type: string
                      required:
                      - port
                      type: object
                    initialDelaySeconds:
                      description: 'Number of seconds after the container has started
                        before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                      format: int32
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default
                        to 10 seconds. Minimum value is 1.
                      format: int32
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to
                        be considered successful after having failed. Defaults to
                        1. Must be 1 for liveness and startup. Minimum value is 1.
                      format: int32
                      type: integer
                    tcpSocket:
                      description: 'TCPSocket specifies an action involving a TCP
                        port. TCP hooks not yet supported TODO: implement a realistic
                        TCP lifecycle hook'
                      properties:
                        host:
                          description: 'Optional: Host name to connect to, defaults
                            to the pod IP.'
                          type: string
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Number or name of the port to access on the
                            container. Number must be in the range 1 to 65535. Name
                            must be an IANA_SVC_NAME.
                          x-kubernetes-int-or-string: true
                      required:
                      - port
                      type: object
                    timeoutSeconds:
                      description: 'Number of seconds after which the probe times
                        out. Defaults to 1 second. Minimum value is 1. More info:
                        https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                      format: int32
                      type: integer
                  type: object
                memoryLimit:
                  description: Memory limit of containers in the pod Default value
                    "<empty>".
                  type: string
                minReplicas:
                  description: Initial minimum number of replicas in Integration Default
                    value "<empty>".
                  format: int32
                  type: integer
                readinessProbe:
                  description: ReadinessProbe for containers in the pod Default value
                    "<empty>".
                  properties:
                    exec:
                      description: One and only one of the following should be specified.
                        Exec specifies the action to take.
                      properties:
                        command:
                          description: Command is the command line to execute inside
                            the container, the working directory for the command  is
                            root ('/') in the container's filesystem. The command
                            is simply exec'd, it is not run inside a shell, so traditional
                            shell instructions ('|', etc) won't work. To use a shell,
                            you need to explicitly call out to that shell. Exit status
                            of 0 is treated as live/healthy and non-zero is unhealthy.
                          items:
                            type: string
                          type: array
                      type: object
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be
                        considered failed after having succeeded. Defaults to 3. Minimum
                        value is 1.
                      format: int32
                      type: integer
                    httpGet:
                      description: HTTPGet specifies the http request to perform.
                      properties:
                        host:
                          description: Host name to connect to, defaults to the pod
                            IP. You probably want to set "Host" in httpHeaders instead.
                          type: string
                        httpHeaders:
                          description: Custom headers to set in the request. HTTP
                            allows repeated headers.
                          items:
                            description: HTTPHeader describes a custom header to be
                              used in HTTP probes
                            properties:
                              name:
                                description: The header field name
                                type: string
                              value:
                                description: The header field value
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        path:
                          description: Path to access on the HTTP server.
                          type: string
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Name or number of the port to access on the
                            container. Number must be in the range 1 to 65535. Name
                            must be an IANA_SVC_NAME.
                          x-kubernetes-int-or-string: true
                        scheme:
                          description: Scheme to use for connecting to the host. Defaults
                            to HTTP.
                          type: string
                      required:
                      - port
                      type: object
                    initialDelaySeconds:
                      description: 'Number of seconds after the container has started
                        before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                      format: int32
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default
                        to 10 seconds. Minimum value is 1.
                      format: int32
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to
                        be considered successful after having failed. Defaults to
                        1. Must be 1 for liveness and startup. Minimum value is 1.
                      format: int32
                      type: integer
                    tcpSocket:
                      description: 'TCPSocket specifies an action involving a TCP
                        port. TCP hooks not yet supported TODO: implement a realistic
                        TCP lifecycle hook'
                      properties:
                        host:
                          description: 'Optional: Host name to connect to, defaults
                            to the pod IP.'
                          type: string
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Number or name of the port to access on the
                            container. Number must be in the range 1 to 65535. Name
                            must be an IANA_SVC_NAME.
                          x-kubernetes-int-or-string: true
                      required:
                      - port
                      type: object
                    timeoutSeconds:
                      description: 'Number of seconds after which the probe times
                        out. Defaults to 1 second. Minimum value is 1. More info:
                        https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                      format: int32
                      type: integer
                  type: object
                reqMemory:
                  description: Memory request of containers in the pod Default value
                    "<empty>".
                  type: string
                requestCPU:
                  description: Cpu request of containers in the pod Default value
                    "<empty>".
                  type: string
              type: object
            env:
              description: List of environment variables to set for the integration.
              items:
                description: EnvVar represents an environment variable present in
                  a Container.
                properties:
                  name:
                    description: Name of the environment variable. Must be a C_IDENTIFIER.
                    type: string
                  value:
                    description: 'Variable references $(VAR_NAME) are expanded using
                      the previous defined environment variables in the container
                      and any service environment variables. If a variable cannot
                      be resolved, the reference in the input string will be unchanged.
                      The $(VAR_NAME) syntax can be escaped with a double $$, ie:
                      $$(VAR_NAME). Escaped references will never be expanded, regardless
                      of whether the variable exists or not. Defaults to "".'
                    type: string
                  valueFrom:
                    description: Source for the environment variable's value. Cannot
                      be used if value is not empty.
                    properties:
                      configMapKeyRef:
                        description: Selects a key of a ConfigMap.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the ConfigMap or its key
                              must be defined
                            type: boolean
                        required:
                        - key
                        type: object
                      fieldRef:
                        description: 'Selects a field of the pod: supports metadata.name,
                          metadata.namespace, metadata.labels, metadata.annotations,
                          spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP,
                          status.podIPs.'
                        properties:
                          apiVersion:
                            description: Version of the schema the FieldPath is written
                              in terms of, defaults to "v1".
                            type: string
                          fieldPath:
                            description: Path of the field to select in the specified
                              API version.
                            type: string
                        required:
                        - fieldPath
                        type: object
                      resourceFieldRef:
                        description: 'Selects a resource of the container: only resources
                          limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage,
                          requests.cpu, requests.memory and requests.ephemeral-storage)
                          are currently supported.'
                        properties:
                          containerName:
                            description: 'Container name: required for volumes, optional
                              for env vars'
                            type: string
                          divisor:
                            description: Specifies the output format of the exposed
                              resources, defaults to "1"
                            type: string
                          resource:
                            description: 'Required: resource to select'
                            type: string
                        required:
                        - resource
                        type: object
                      secretKeyRef:
                        description: Selects a key of a secret in the pod's namespace
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                    type: object
                required:
                - name
                type: object
              type: array
            envFrom:
              description: List of environment variable references set for the integration.
              items:
                description: EnvFromSource represents the source of a set of ConfigMaps
                properties:
                  configMapRef:
                    description: The ConfigMap to select from
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                      optional:
                        description: Specify whether the ConfigMap must be defined
                        type: boolean
                    type: object
                  prefix:
                    description: An optional identifier to prepend to each key in
                      the ConfigMap. Must be a C_IDENTIFIER.
                    type: string
                  secretRef:
                    description: The Secret to select from
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                      optional:
                        description: Specify whether the Secret must be defined
                        type: boolean
                    type: object
                type: object
              type: array
            expose:
              description: Ports to expose
              properties:
                inboundPorts:
                  description: InboundPorts any traffic serving port that needs to
                    be exposed
                  items:
                    format: int32
                    type: integer
                  type: array
                passthroPort:
                  description: PassthroPort HTTP/HTTPs traffic serving ports
                  format: int32
                  type: integer
              type: object
            image:
              description: Docker image consist of micro integrator runtime and synapse
                configs
              type: string
            imagePullSecret:
              description: Docker image credentials if the Image is in private registry
              type: string
          required:
          - image
          type: object
        status:
          description: IntegrationStatus defines the observed state of Integration
          properties:
            readiness:
              description: Status of the Integration deployment
              type: string
            serviceName:
              description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                of cluster Important: Run "operator-sdk generate k8s" to regenerate
                code after modifying this file Add custom validation using kubebuilder
                tags: https://book.kubebuilder.io/beyond_basics/generating_crd.html
                Name of the created service in the Integration deployment'
              type: string
          required:
          - readiness
          - serviceName
          type: object
      type: object
  version: v1alpha2
  versions:
  - name: v1alpha2
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: targetendpoints.wso2.com
spec:
  group: wso2.com
  names:
    kind: TargetEndpoint
    listKind: TargetEndpointList
    plural: targetendpoints
    singular: targetendpoint
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: TargetEndpoint is the Schema for the targetendpoints API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: TargetEndpointSpec defines the desired state of TargetEndpoint
          properties:
            applicationProtocol:
              description: Protocol of the application. Supports "http" and "https".
              type: string
            deploy:
              description: Deployment details.
              properties:
                cpuLimit:
                  type: string
                dockerImage:
                  type: string
                maxReplicas:
                  format: int32
                  type: integer
                memoryLimit:
                  type: string
                minReplicas:
                  format: int32
                  type: integer
                name:
                  type: string
                reqMemory:
                  type: string
                requestCPU:
                  type: string
              required:
              - dockerImage
              - name
              type: object
            mode:
              description: Mode of the Target Endpoint. Supports "privateJet", "sidecar",
                "serverless". Default value "privateJet"
              type: string
            ports:
              description: List of optional ports of the target endpoint. First port
                should be the port of the target endpoint which is referred in swagger
                definition.
              items:
                description: Port represents ports of the Target Endpoint
                properties:
                  name:
                    description: The name of this port within the service. This must
                      be a DNS_LABEL. All ports within a ServiceSpec must have unique
                      names.
                    type: string
                  port:
                    description: The port that will be exposed by this service.
                    format: int32
                    type: integer
                  targetPort:
                    description: Port that is targeted to expose.
                    format: int32
                    type: integer
                required:
                - name
                - port
                - targetPort
                type: object
              type: array
          required:
          - applicationProtocol
          - deploy
          - ports
          type: object
        status:
          description: TargetEndpointStatus defines the observed state of TargetEndpoint
          type: object
      type: object
  version: v1alpha2
  versions:
  - name: v1alpha2
    served: true
    storage: true
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: api-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: api-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - endpoints
  - persistentvolumeclaims
  - events
  - configmaps
  - secrets
  - ingresses
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  - replicasets
  - statefulsets
  - ingresses
  verbs:
  - '*'
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - get
  - create
- apiGroups:
  - apps
  resourceNames:
  - api-operator
  resources:
  - deployments/finalizers
  verbs:
  - update
- apiGroups:
  - wso2.com
  resources:
  - '*'
  - ratelimitings
  - targetendpoints
  - integrations
  verbs:
  - '*'
- apiGroups:
  - batch
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - autoscaling
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - extensions
  resources:
  - ingresses
  - ingress
  verbs:
  - '*'
- apiGroups:
  - serving.knative.dev
  resources:
  - '*'
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - route.openshift.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - networking.istio.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: api-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: api-operator
subjects:
- kind: ServiceAccount
  name: api-operator
---
apiVersion: v1
data:
  deployAPIToAPIManager: "true"
  deployAPIToMicrogateway: "false"
kind: ConfigMap
metadata:
  name: api-controller-config
---
apiVersion: v1
data:
  apimCredentialsSecret: apim-secret
  apimKeymanagerEndpoint: https://wso2am-pattern-1-am-service:9443
  apimPublisherEndpoint: https://wso2am-pattern-1-am-service:9443
  apimTokenEndpoint: https://wso2am-pattern-1-am-service:9443/oauth2/token
  insecureSkipVerify: "true"
kind: ConfigMap
metadata:
  name: apim-config
---
apiVersion: v1
data:
  mgwAdapterHost: https://adapter.default:9843
  mgwInsecureSkipVerify: "true"
kind: ConfigMap
metadata:
  name: envoy-mgw-configs
---
apiVersion: v1
data:
  autoIngressCreation: "true"
  enableAutoScale: "false"
  hpaMetrics: |
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
  livenessProbe: |
    tcpSocket:
      port: 8290
    initialDelaySeconds: 10
    periodSeconds: 5
  maxReplicas: "5"
  minReplicas: "1"
  readinessProbe: |
    httpGet:
      path: /healthz
      port: 9201
    initialDelaySeconds: 10
    periodSeconds: 5
  reconcileInterval: "10"
kind: ConfigMap
metadata:
  name: integration-config
---
apiVersion: v1
data:
  ingress.properties: |
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/ssl-redirect: false
  ingressHostName: wso2ei.ingress.wso2.com
  ingressResourceName: api-operator-ingress
  ingressTransportMode: https
kind: ConfigMap
metadata:
  name: integration-ingress-config
---
apiVersion: v1
data:
  resourceLimitCPUTarget: 500m
  resourceLimitMemoryTarget: 512Mi
  resourceRequestCPUTarget: 500m
  resourceRequestMemoryTarget: 512Mi
kind: ConfigMap
metadata:
  name: target-endpoint-controller-config
---
apiVersion: v1
data:
  hpaVersion: v2beta1
  mgwMaxReplicas: "5"
  mgwMetrics: |
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
    # - type: Pods
    #   pods:
    #     metric:
    #       name: http_requests_total_value_per_second
    #     target:
    #       type: AverageValue
    #       averageValue: 100m
    # - type: Object
    #   object:
    #     metric:
    #       name: requests-per-second
    #     describedObject:
    #       apiVersion: networking.k8s.io/v1beta1
    #       kind: Ingress
    #       name: main-route
    #     target:
    #       type: Value
    #       value: 10k
  mgwMetricsV2beta1: |
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 50
  targetEndpointMaxReplicas: "5"
  targetEndpointMetrics: |
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
  targetEndpointMetricsV2beta1: |
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 50
kind: ConfigMap
metadata:
  name: target-endpoint-hpa-config
---
apiVersion: v1
data:
  apim.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlEcVRDQ0FwR2dBd0lCQWdJRVhiQUJvekFOQmdrcWhraUc5dzBCQVFzRkFEQmtNUXN3Q1FZRFZRUUdFd0pWDQpVekVMTUFrR0ExVUVDQXdDUTBFeEZqQVVCZ05WQkFjTURVMXZkVzUwWVdsdUlGWnBaWGN4RFRBTEJnTlZCQW9NDQpCRmRUVHpJeERUQUxCZ05WQkFzTUJGZFRUekl4RWpBUUJnTlZCQU1NQ1d4dlkyRnNhRzl6ZERBZUZ3MHhPVEV3DQpNak13TnpNd05ETmFGdzB5TWpBeE1qVXdOek13TkROYU1HUXhDekFKQmdOVkJBWVRBbFZUTVFzd0NRWURWUVFJDQpEQUpEUVRFV01CUUdBMVVFQnd3TlRXOTFiblJoYVc0Z1ZtbGxkekVOTUFzR0ExVUVDZ3dFVjFOUE1qRU5NQXNHDQpBMVVFQ3d3RVYxTlBNakVTTUJBR0ExVUVBd3dKYkc5allXeG9iM04wTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGDQpBQU9DQVE4QU1JSUJDZ0tDQVFFQXhlcW9aWWJRL1NyOERPRlErL3FiRWJDcDZWemI1aHpIN29hM2hmMkZaeFJLDQpGMEg2YjhDT016ejgrMG12RWRZVnZiLzMxak1FTDJDSVFoa1FSb2wxSXJ1RDZuQk9ta2p1WEpTQmZpY2tsTWFKDQpaT1JodUNyQjRyb0h4em9HMTlhV21zY0EwZ25mQktvMm9HWFNqSm1uWnhJaCsyWDZzeUhDZnlNWlowMEx6RHlyDQpnb1hXUVh5RnZDQTJheDU0czdzS2lIT00zUDRBOVc0UVV3bW9FaTRIUW1QZ0pqSU00ZUdWUGgwR3RJQU5OK0JPDQpRMUtrVUk3T3p0ZUhDVEx1M1ZqeE0wc3c4UVJheVpkaG5pUEYrVTluM2ZhMW1PNEtMQnNXNG1ETGpnOFIvSnVBDQpHVFgvU0VFR2owQjVIV1FBUDZteXhLRnoyeHdEYUNHdlQrcmR2a2t0T3dJREFRQUJvMk13WVRBVUJnTlZIUkVFDQpEVEFMZ2dsc2IyTmhiR2h2YzNRd0hRWURWUjBPQkJZRUZFRHBMQjRQRGd6c2R4RDJGVjNyVm5Pci9BMERNQjBHDQpBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFMQmdOVkhROEVCQU1DQlBBd0RRWUpLb1pJDQpodmNOQVFFTEJRQURnZ0VCQUU4SC9heEFnWGp0OTNIR0NZR3VtVUxXMmxLa2dxRXZYcnlQMlFrUnBieVFTc1RZDQpjTDdaTFNWQjdNVlZIdElzSGg4ZjFDNFhxNlF1OE5VcnF1NVpMQzFwVUJ5YXFSMlpJemNqL09XTEdZUmpTVEhTDQpWbVZJcTlRcUJxMWo3cjZmM0JXcWFPSWlrbm1UekV1cUlWbE9UWTBnTytTSGRTNjJ2cjJGQ3o0eU9yQkV1bEdBDQp2b21zVThzcWc0UGhGbmtoeEk0TTkxMkx5KzJSZ045TDdBa2h6SytFelhZMS9RdGxJL1Z5c05mUzZ6ckhhc0t6DQo2Q3JLS0NHcVFuQm5TdlNUeUY5T1I1S0ZIbmtBd0U5OTVJWnJjU1FpY014c0xoVE1VSERMUS9nUnl5N1YvWnBEDQpNZkFXUis1T2VRaU5BcC9iRzRmakpvVGRvcWt1bDUxKzJiSEhWclU9DQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tDQo=
kind: Secret
metadata:
  name: apim-cert-secret
type: Opaque
---
apiVersion: v1
data:
  cert_security: YXBpbS1jZXJ0LXNlY3JldA==
  password: YWRtaW4=
  username: YWRtaW5AZ29nby5jb20=
kind: Secret
metadata:
  name: apim-secret
type: Opaque
---
apiVersion: v1
data:
  mgwCertSecretName: ZW52b3ltZ3ctY2VydC1zZWNyZXQ=
  password: YWRtaW4=
  username: YWRtaW4=
kind: Secret
metadata:
  name: envoymgw-adapter-secret
type: Opaque
---
apiVersion: v1
data:
  adapter.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURmakNDQW1hZ0F3SUJBZ0lKQUwzUW9rdFZDWDJTTUEwR0NTcUdTSWIzRFFFQkN3VUFNR1F4Q3pBSkJnTlYKQkFZVEFsVlRNUXN3Q1FZRFZRUUlEQUpEUVRFV01CUUdBMVVFQnd3TlRXOTFiblJoYVc0Z1ZtbGxkekVOTUFzRwpBMVVFQ2d3RVYxTlBNakVOTUFzR0ExVUVDd3dFVjFOUE1qRVNNQkFHQTFVRUF3d0piRzlqWVd4b2IzTjBNQjRYCkRUSXhNREV6TVRFM05USXpOVm9YRFRNeE1ERXlPVEUzTlRJek5Wb3daREVMTUFrR0ExVUVCaE1DVlZNeEN6QUoKQmdOVkJBZ01Ba05CTVJZd0ZBWURWUVFIREExTmIzVnVkR0ZwYmlCV2FXVjNNUTB3Q3dZRFZRUUtEQVJYVTA4eQpNUTB3Q3dZRFZRUUxEQVJYVTA4eU1SSXdFQVlEVlFRRERBbHNiMk5oYkdodmMzUXdnZ0VpTUEwR0NTcUdTSWIzCkRRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRHkrTjRmTkdHK2w4ekt5MmR3K2NzRmJMKzNrWGQ0TEZ0d3R0MjYKQmFmTitjaUJwWHBOYWVvOEZScUFrRXFuTkZtemdEMUNOcjltdEpVbU5peHNCSE1KTCtxSmFuUUozQ1NxZnBrSgplbVp1bCtOaWNvNUdydzN3ejdOWnBKbGhzMjlZbm1oSTdpUWY0c3BiTTROb1Y1dkJNa0dteEhXOEtFY2YzbDJqCkVXNVNPSmxxS3hWcENCUW5wMnRGMlVPMGlhbjJ2MFFCZmZwaEU2NWdVK2dRbHkrd2ZqKzY0QkhvS1VuWFpFVGMKejVnM2cxT0xYQnBVMjhadlBqZWcydWsvTHRKZUNtTE9LZURGSVl5b2pwWlRiS3hHYVQ5LzBBdUNJOGlrVU9tNQorSUpOaG9oeEZQNWh4VEtuMmN3T1ZOR3lReTRQNTFEV3gwazVyWFUvL0l5ejZDVjlBZ01CQUFHak16QXhNQzhHCkExVWRFUVFvTUNhQ0IyRmtZWEIwWlhLQ0NHVnVabTl5WTJWeWdnWnliM1YwWlhLQ0NXeHZZMkZzYUc5emREQU4KQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBa2l5WXQrMGZwOGNzOW9hMkhWVS9OZkltbHpRTUJWMFMrTTNERmxwNgo0ZWdMV2JEWE05azVHZWNybFUyYlkzdU8ydU1UOWp6V0o3R1UxZnVKdEFJRFFwVVJydWhvWHFpdVFmM3owUTZPClhsSlVXTlJpVWFZeWhNQkNLM2VrbXhyVEtrZ3dUZHpIWlBlRTN3MkRIOHA2bjU3YVBFNkJjYXJLTzdCWEJERDAKdmx3amtDNm5zOStQcGplMmJZeFIyQlBBNkxrcVpleWZ5WmNwUE55NE5UTjY2TEErVVFFaXpVTWV0R2FocFNwaAo1TlFlSUZnOFM0OWJsRlZsdWNYS0ZMdEFKUVgyVWJEdUxMamhDZEh1b3AwMGxZN3Nicks2dnJ5d3RydDEyaHp1Cnp3TmR3S01pQ1V3MTRvQzdBMlpmaEE1UEVpT2JFdFIwSittUGhuTEdHVk1HNHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
kind: Secret
metadata:
  name: envoymgw-cert-secret
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: api-operator
  name: operator-service
spec:
  ports:
  - name: https-operator
    nodePort: 30445
    port: 9445
    protocol: TCP
    targetPort: 9445
  selector:
    name: api-operator
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      name: api-operator
  template:
    metadata:
      labels:
        name: api-operator
    spec:
      containers:
      - command:
        - api-operator
        env:
        - name: WATCH_NAMESPACE
          value: ""
        - name: WATCH_CLUSTER_LEVEL
          value: "false"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: OPERATOR_NAME
          value: api-operator
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: wso2/k8s-api-operator:2.0.0
        imagePullPolicy: Always
        name: api-operator
        ports:
        - containerPort: 9445
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 250m
            memory: 250Mi
      serviceAccountName: api-operator
